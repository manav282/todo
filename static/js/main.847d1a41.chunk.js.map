{"version":3,"sources":["redux/reducer.js","components/TodoItem.js","components/DisplayTodos.js","components/Todos.js","App.js","redux/store.js","index.js"],"names":["initialValue","todoList","localTodoList","window","localStorage","getItem","JSON","parse","setItem","getInitialTodo","addTodoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","todoListArr","stringify","completeTodos","console","log","forEach","todo","id","completed","updateTodos","item","removeTodos","index","splice","updateFilterStatus","filterStatus","actions","reducer","TodoItem","props","updateTodo","removeTodo","completeTodo","inputRef","useRef","className","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","onClick","focus","style","color","DisplayTodos","useState","sort","setSort","todos","useSelector","dispatch","useDispatch","obj","length","map","Todos","setTodo","add","alert","Math","floor","random","type","onChange","target","handleChange","App","motion","h1","initial","y","animate","transition","duration","whileHover","scale","div","store","configureStore","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.847d1a41.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst getInitialTodo = () => {\n  \n  const localTodoList = window.localStorage.getItem('todoList');\n  \n  if (localTodoList) {\n    return JSON.parse(localTodoList);\n  }\n  window.localStorage.setItem('todoList', []);\n  return [];\n};\n\nconst initialValue = {\n  todoList: getInitialTodo(),\n};\n\nexport const addTodoReducer = createSlice({\n  name: 'todo',\n  initialState: initialValue,\n  reducers: {\n    addTodos: (state, action) => {\n      state.todoList.push(action.payload);\n      const todoList = window.localStorage.getItem('todoList');\n      if (todoList) {\n        const todoListArr = JSON.parse(todoList);\n        todoListArr.push({\n          ...action.payload,\n        });\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArr));\n      } else {\n        window.localStorage.setItem(\n          'todoList',\n          JSON.stringify([\n            {\n              ...action.payload,\n            },\n          ])\n        );\n      }\n    },\n    completeTodos: (state, action) => {\n      console.log('In completeTodo');\n      const todoList = window.localStorage.getItem('todoList');\n      if (todoList) {\n        const todoListArr = JSON.parse(todoList);\n        todoListArr.forEach((todo) => {\n          if (todo.id === action.payload) {\n            todo.completed = true;\n          }\n        });\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArr));\n        state.todoList = [...todoListArr];\n      }\n    },\n    updateTodos: (state, action) => {\n      const todoList = window.localStorage.getItem('todoList');\n      if (todoList) {\n        const todoListArr = JSON.parse(todoList);\n        todoListArr.forEach((todo) => {\n          if (todo.id === action.payload.id) {\n            todo.item = action.payload.item;\n          }\n        });\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArr));\n        state.todoList = [...todoListArr];\n      }\n    },\n    removeTodos: (state, action) => {\n      const todoList = window.localStorage.getItem('todoList');\n      if (todoList) {\n        const todoListArr = JSON.parse(todoList);\n        todoListArr.forEach((todo, index) => {\n          if (todo.id === action.payload) {\n            todoListArr.splice(index, 1);\n          }\n        });\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArr));\n        state.todoList = [...todoListArr];\n      }\n    },\n    updateFilterStatus: (state, action) => {\n      state.filterStatus = action.payload;\n    },\n  },\n});\n\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  completeTodos,\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;\n","import React, { useRef } from \"react\";\nimport { AiFillEdit,AiFillDelete } from \"react-icons/ai\";\nimport { IoCheckmarkDoneSharp } from \"react-icons/io5\";\n\n\nconst TodoItem = (props) => {\n  const { item, updateTodo, removeTodo, completeTodo } = props;\n\n  const inputRef = useRef(true);\n\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  };\n\n  const update = (id, value, e) => {\n    if (e.which === 13) {\n      updateTodo({ id, item: value });\n      inputRef.current.disabled = true;\n    }\n  };\n\n  return (\n    <li key={item.id} className=\"card\">\n      <textarea ref={inputRef} disabled={inputRef} defaultValue={item.item}\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}/>\n      <div className=\"btns\">\n        <button\n          onClick={() => changeFocus()}\n          style={{ color: \"orange\" }}\n        >\n          \n          <AiFillEdit />\n        </button>\n        {item.completed === false && (\n          <button\n            style={{ color: \"orange\" }}\n            onClick={() => completeTodo(item.id)}\n          >\n            <IoCheckmarkDoneSharp />\n          </button>\n        )}\n        <button\n          style={{ color: \"orange\" }}\n          onClick={() => removeTodo(item.id)}\n        >\n          \n          <AiFillDelete />\n        </button>\n      </div>\n      {item.completed && <span className=\"completed\">done</span>}\n    </li>\n  );\n};\n\nexport default TodoItem;\n\n\n\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  completeTodos,\n  removeTodos,\n  updateTodos,\n} from \"../redux/reducer\";\nimport TodoItem from \"./TodoItem\";\n\nconst DisplayTodos = () => {\n  const [sort, setSort] = useState(\"active\");\n  const todos = useSelector(state => state.todoList);\n  const dispatch = useDispatch();\n  const removeTodo = (id) => dispatch(removeTodos(id));\n  const updateTodo = (obj) => dispatch(updateTodos(obj));\n  const completeTodo = (id) => dispatch(completeTodos(id));\n\n  return (\n    <div className=\"displaytodos\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSort(\"active\")}\n        >\n          Active\n        </button>\n        <button\n          onClick={() => setSort(\"completed\")}\n        >\n          Completed\n        </button>\n        <button\n          onClick={() => setSort(\"all\")}\n        >\n          All\n        </button>\n      </div>\n      <ul>\n        {todos.length > 0 && sort === \"active\"\n          ? todos.map((item) => {\n            return (\n              item.completed === false && (\n                <TodoItem\n                  key={item.id}\n                  item={item}\n                  removeTodo={removeTodo}\n                  updateTodo={updateTodo}\n                  completeTodo={completeTodo}\n                />\n              )\n            );\n          })\n          : null}\n        {/* for completed items */}\n        {todos.length > 0 && sort === \"completed\"\n          ? todos.map((item) => {\n            return (\n              item.completed === true && (\n                <TodoItem\n                  key={item.id}\n                  item={item}\n                  removeTodo={removeTodo}\n                  updateTodo={updateTodo}\n                  completeTodo={completeTodo}\n                />\n              )\n            );\n          })\n          : null}\n        {/* for all items */}\n        {todos.length > 0 && sort === \"all\"\n          ? todos.map((item) => {\n            return (\n              <TodoItem\n                key={item.id}\n                item={item}\n                removeTodo={removeTodo}\n                updateTodo={updateTodo}\n                completeTodo={completeTodo}\n              />\n            );\n          })\n          : null}\n      </ul>\n    </div>\n  );\n};\n\nexport default DisplayTodos;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodos } from \"../redux/reducer\";\nimport { GoPlus } from \"react-icons/go\";\n\nconst Todos = () => {\n  const [todo, setTodo] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const addTodo = obj => dispatch(addTodos(obj));\n\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n\n  const add = () => {\n    if (todo === \"\") {\n      alert(\"Input is Empty\");\n    } else {\n      addTodo({\n        id: Math.floor(Math.random() * 1000),\n        item: todo,\n        completed: false,\n      });\n      setTodo(\"\");\n    }\n  };\n\n  return (\n    <div className=\"addTodos\">\n      <input\n        type=\"text\"\n        onChange={(e) => handleChange(e)}\n        className=\"todo-input\"\n        value={todo}\n      />\n\n      <button\n        className=\"add-btn\"\n        onClick={() => add()}\n      >\n        <GoPlus />\n      </button>\n      <br />\n    </div>\n  );\n};\n\nexport default Todos;\n","import \"./css/main.css\";\nimport DisplayTodos from \"./components/DisplayTodos\";\nimport Todos from \"./components/Todos\";\nimport { motion } from \"framer-motion\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <motion.h1\n        initial={{ y: -400 }}\n        animate={{ y: 0 }}\n        transition={{ type: \"spring\", duration: 1 }}\n        whileHover={{ scale: 1.1 }}\n      >\n        Todo App\n      </motion.h1>\n      <motion.div\n        initial={{ y: 1000 }}\n        animate={{ y: 0 }}\n        transition={{ type: \"tween\", duration: 1.5 }}\n      >\n        <Todos />\n        <DisplayTodos />\n      </motion.div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {reducer} from \"./reducer\";\n\nconst store = configureStore({\n  reducer: reducer,\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/checklist\" element={<App />}/>\n      </Routes>\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}